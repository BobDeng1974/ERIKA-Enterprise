/* ###*B*###
 * ERIKA Enterprise - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2002-2012  Evidence Srl
 *
 * This file is part of ERIKA Enterprise.
 *
 * ERIKA Enterprise is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation, 
 * (with a special exception described below).
 *
 * Linking this code statically or dynamically with other modules is
 * making a combined work based on this code.  Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * As a special exception, the copyright holders of this library give you
 * permission to link this code with independent modules to produce an
 * executable, regardless of the license terms of these independent
 * modules, and to copy and distribute the resulting executable under
 * terms of your choice, provided that you also meet, for each linked
 * independent module, the terms and conditions of the license of that
 * module.  An independent module is a module which is not derived from
 * or based on this library.  If you modify this code, you may extend
 * this exception to your version of the code, but you are not
 * obligated to do so.  If you do not wish to do so, delete this
 * exception statement from your version.
 *
 * ERIKA Enterprise is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 * ###*E*### */
 
 /** 
    @file      conf.oil.lwip
    @author    Errico Guidieri
    @date      2012
*/

OS EE {

  /* LWIP Flags */
  CFLAGS = "-DLWIP_UDP=1";
  /* MEM_SIZE: the size of the lwIp heap memory. If the application will send
     a lot of data that needs to be copied, this should be set high. */
  CFLAGS = "-DMEM_SIZE=2*1024";
  /*
   * PBUF_POOL_SIZE: the number of buffers in the pbuf pool. 
   */
  CFLAGS = "-DPBUF_POOL_SIZE=3";
  /* PBUF_POOL_BUFSIZE: the size of each pbuf in the pbuf pool. The default is
   * designed to accomodate single full size TCP frame in one pbuf, including
   * TCP_MSS, IP header, and link header.
   * LWIP_MEM_ALIGN_SIZE(TCP_MSS+40+PBUF_LINK_HLEN)
   * TCP_MSS: 536
   * PBUF_LINK_HLEN: 14
   */
  CFLAGS = "-DPBUF_POOL_BUFSIZE=1536";
  /* MEMP_NUM_PBUF: the number of memp struct pbufs. If the application
     sends a lot of data out of ROM (or other static memory), this
     should be set high. */
  CFLAGS = "-DMEMP_NUM_PBUF=8";

  /*                        !!!WARNING!!!
    Needed because LWIP will not compile otherwise (ip.c for sure at least).
    Maybe this option could be activated by default inside Erika makefiles
   */
  CFLAGS = "--c99";

  /* The Name mapping can be done inside Gpt_Cfg.h or with CFLAGS, like this*/
  /* CFLAGS = "-DGpt_Notification_Channel_LWIP=Gpt_Notification_Channel_1_A"; */

  /* To chanege EE_LWIP_TIMER_PERIOD_MS from default (5ms) */
  /* CFLAGS="EE_LWIP_TIMER_PERIOD_MS=1"; */

  /* Debug Configuration */
  // CFLAGS = "-D__LWIP_DEBUG__"; 
  // CFLAGS = "-D__LWIP_DEBUG_SERIAL__";
  // CFLAGS = "-DEE_LWIP_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-D__LWIP_TIME_DEBUG__";
  // CFLAGS = "-DETHARP_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DNETIF_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DPBUF_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DIP_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DTCP_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DTCP_INPUT_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DTCP_OUTPUT_DEBUG=LWIP_DBG_ON";
  // CFLAGS = "-DUDP_DEBUG=LWIP_DBG_ON";
  
  /* enc28j60 Debug Options */
  // EE_OPT = "__ENC28J60_DEBUG__";
  // EE_OPT = "__ENC28J60_DEBUG_SERIAL__";

  /* LWIP options */
  EE_OPT = "__LWIP_IPV4__";
  /* Should be the following generated by RT-Druid ? */
  EE_OPT = "__USE_ETHERNET_ENC28J60__";
  /* Enable ENC28J60 IRQ */
  EE_OPT = "__USE_ETHERNET_IRQ__";

  /* ********************************************************** */
  /*                Contrib Library Inclusion                   */
  /* ********************************************************** */


  /* LWIP libraries enabling */
  EE_OPT = "__ADD_LIBS__";
  /* Enable driver for enc28j60 external transciver */
  LIB = ENABLE { NAME = "ENC28J60"; };
  LIB = ENABLE { NAME = "LWIP"; };
  
  /* CONSOLE library is used only for enc28j60 and lwip debug */
  // EE_OPT = "USE_CONSOLE";
  // EE_OPT = "USE_CONSOLE_SERIAL";
  // LIB = ENABLE { NAME = "CONSOLE"; };
};

/* this is the OIL part for the GPT CHANNEL 0 A ISR used as LWIP Timer */
ISR Timer_Lwip {
  CATEGORY = 2;
  ENTRY = "TIMER_0_A";
  PRIORITY = 1;
};

ISR Enc28j60_Isr{
  CATEGORY = 2;
  ENTRY = "GPIO_F";
  PRIORITY = 2;
};

/* this is the OIL part for the SSI_1 ISR */
ISR Spi_HwUnit_1_ISR {
  CATEGORY = 2;
  ENTRY = "SSI_1";
  PRIORITY = 3;
};

/* this is the OIL part for the DMA Error ISR */
ISR Dma_TransferError_ISR {
  CATEGORY = 2;
  ENTRY = "UDMA_ERR";
  PRIORITY = 4;
};

/* RESOURCEs list */
RESOURCE LwipMutex { RESOURCEPROPERTY = STANDARD; };

/* TASKs list */
TASK LwipReceive {
  PRIORITY = 30;
  STACK = SHARED;
  SCHEDULE = FULL;
  RESOURCE = "LwipMutex";
};

TASK LwipPeriodic {
  PRIORITY = 35;
  STACK = SHARED;
  SCHEDULE = FULL;
  RESOURCE = "LwipMutex";
};

