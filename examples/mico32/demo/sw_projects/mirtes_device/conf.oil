/* MIRTES device demo */

CPU mySystem {

	OS myOs {
		EE_OPT = "DEBUG_STACK";
		EE_OPT = "DEBUG";
		
		CFLAGS = "-g2";
		ASFLAGS = "";
		LDFLAGS = ""; 
 
		// This demo needs the follwing string in the makefile to compile without errors:
		// INCLUDE_PATH += $(MIRTES_BASE)/mirtes/inc/ $(MIRTES_BASE)/mirtes/
		// MIRTES_BASE is an environment variable and its value is the path of MIRTES folder.
		
		CPU_DATA = LM32 {
			/* basic files */
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/code_mico32.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/mirtes.c";
			/* utils */
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/utils/extra.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/utils/linked_list.c";
			/* DB */
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/mirtes_db.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_ms/mirtes_dbms.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_ms/types/gen_aggr.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_ms/types/float_type.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_ms/types/uint16_type.c";	
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_schema/mirtes_db_schema.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_schema/sensors/sensors.c";
			//APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_schema/sensors/acceleration_sensor.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_schema/sensors/illuminance_sensor.c";
			//APP_SRC = "$(MIRTES_BASE)/mirtes/src/db/db_schema/sensors/temperature_sensor.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/utils/mirtes_debug.c";		
			/* coordinator */
			//APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/coord_periodic_query_manager.c";
			//APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/coord_analyzer.c";
			//APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/sap_nap_com/sap_nap_com_uart_mico32.c";
			//// APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/sap_nap_com/sap_nap_com_uart.c";
			// APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/sap_nap_com/mtcpip_udp_server.c";
			// APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/coord_scheduler.c";
			// APP_SRC = "$(MIRTES_BASE)/mirtes/src/coord/coord_remote_com.c";
			/* device */
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/device/device_analyzer.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/device/device_remote_communication.c";
			APP_SRC = "$(MIRTES_BASE)/mirtes/src/device/device_scheduler.c";
			
			MULTI_STACK = FALSE;
			USESTANDALONEPRINTF = FALSE; // Optional, default is FALSE
			USESMALLC = FALSE; // Optional, defautl is FALSE
		};
		
		// Light sensor
		EE_OPT = "__USE_LIGHTSENSOR_TSL2561__";
		
		MCU_DATA = LATTICE_PLATFORM {
   			MODEL = LIBRARY {
				PLATFORM_LIB_PATH = "../test_sram_lib";
				PLATFORM_NAME = "test_base";
				PLATFORM_BLD_CFG = "Release"; // Optional, default is ""
   			};
   			DEVICE = I2C{					
					NAME = "camera_i2c";	
			};
			DEVICE = TIMER{						
					NAME = "timer1";
					OPTIONS = TIMER_IRQ_SUPPORT;							
			};
  		};
  		
		BOARD_DATA = XP2_CAMERA_BOARD {
			OPTIONS = TIMER;			
			OPTIONS = TIMER_IRQ_SUPPORT;
			OPTIONS = RS232;								
			OPTIONS = ZIGBEE;			
			OPTIONS = ZIGBEE_IRQ_SUPPORT;	
		};
				
		KERNEL_TYPE = FP;
		
		/* ********************************************************** */
		/*                Contrib Library Inlcusion                   */
		/* ********************************************************** */
		EE_OPT = "__ADD_LIBS__";

		// Memory:
		LIB = ENABLE { NAME = "MEMORY"; };	
		
		// Console:
		LIB = ENABLE { NAME = "CONSOLE"; };	
		EE_OPT = "USE_CONSOLE";
		EE_OPT = "USE_CONSOLE_SERIAL";
		
		// Micro-wireless:
		LIB = ENABLE { NAME = "UWIRELESS"; };	
		EE_OPT = "EE_TYPETICK=EE_INT32"; /* Mandatory! */
		EE_OPT = "UWL_USE_SIMPLE_802154";
		EE_OPT = "UWL_HAL_BUS_FREQ=40000";
		EE_OPT = "UWL_NO_DYN_ASS";
		EE_OPT = "UWL_SUPERFRAME_CALLBACKS"; 
		EE_OPT = "UWL_MAC_TICKS_BEFORE_TIMESLOT=20";
		EE_OPT = "UWL_DEBUG";
		EE_OPT = "UWL_DEBUG_LOG";
		EE_OPT = "UWL_DEBUG_LOG_SERIAL";
		EE_OPT = "UWL_DEBUG_LOG_SERIAL_PORT=CONSOLE_SERIAL_PORT_1";
		EE_OPT = "UWL_DEBUG_LOG_SERIAL_BAUDRATE=115200"; 
		EE_OPT = "UWL_DEBUG_LOG_HAS_PRINT";

		// Mirtes:
		EE_OPT = "MIRTES_DEVICE_TYPE_SDEV";
		EE_OPT = "MIRTES_DEBUG";
		EE_OPT = "MIRTES_DEBUG_LOG";
		EE_OPT = "MIRTES_DEBUG_LOG_SERIAL";
		EE_OPT = "MIRTES_DEBUG_LOG_SERIAL_PORT=CONSOLE_SERIAL_PORT_1";
		EE_OPT = "MIRTES_DEBUG_LOG_SERIAL_BAUDRATE=115200";
		//EE_OPT = "MIRTES_DEBUG_LOG_SERIAL_OPT=CONSOLE_SERIAL_FLAG_BIT8_NO | CONSOLE_SERIAL_FLAG_BIT_STOP1";
		EE_OPT = "MIRTES_DEBUG_LOG_HAS_PRINT";
		
		/* use transceiver MRF24J40 */
		LIB = ENABLE { NAME = "MRF24J40"; };	
		EE_OPT = "USE_MRF24J40";
		EE_OPT = "MRF24J40_DEBUG";
		EE_OPT = "INT_POLARITY_HIGH";
		EE_OPT = "ADD_RSSI_AND_LQI_TO_PACKET";
//		EE_OPT = "MRF24J40_DISABLE_AUTOMATIC_ACK";
//		EE_OPT = "MRF24J40_DISABLE_CSMA";
		EE_OPT = "MRF24J40_ZERO_MIN_BE";
		EE_OPT = "MRF24J40_PROMISCUOUS_MODE";
		EE_OPT = "MRF24J40_UWL_MODE";
};
	
	/* ****************************************************************** */
	/*                      ISR Handler setup                             */
	/* ****************************************************************** */
	
	ISR Timer1 {
		CATEGORY = 2;
		LEVEL = "TIMER1_IRQ";
		HANDLER = "EE_timer_common_handler";
	};
	
	ISR Timer {
		CATEGORY = 2;
		LEVEL = "TIMER_IRQ";
		HANDLER = "EE_timer_common_handler";
	};
	
	ISR Gpio {
		CATEGORY = 2;
		LEVEL = "MISC_GPIO_IRQ";
		HANDLER = "EE_mrf24j40_handler";
	};
	
	/* ****************************************************************** */
	/*                      Application TASKs                             */
	/* ****************************************************************** */
	
	COUNTER myCounter;

	ALARM myAlarm {
		COUNTER = "myCounter";
	    ACTION = ACTIVATETASK { TASK = "analyzer"; };
	};	
	
	TASK serial_writer {
		PRIORITY = 3;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "MTCPIP_STACK_TASK_MUTEX";
	};
	
	//FIXME: analyzer uses different mutexes in device and coordinator	
	TASK analyzer {
		PRIORITY = 5;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "request_buffer_mutex";
		RESOURCE = "query_list_mutex";
		RESOURCE = "periodic_query_list_mutex";
		RESOURCE = "UWL_EE_RESOURCE_MAC_SEND_MUTEX";
	};
	
	TASK scheduler {
		PRIORITY = 7;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "query_list_mutex";
	};
	
	TASK periodic_query_manager {
		PRIORITY = 9;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "query_list_mutex";
		RESOURCE = "periodic_query_list_mutex";
	};

	RESOURCE query_list_mutex { RESOURCEPROPERTY = STANDARD; };
	RESOURCE current_query_mutex { RESOURCEPROPERTY = STANDARD; };
	RESOURCE periodic_query_list_mutex { RESOURCEPROPERTY = STANDARD; };
	RESOURCE request_buffer_mutex { RESOURCEPROPERTY = STANDARD; };
	
	/* -------------------------------------------------------------------- 
	|                 	 --  TCP/IP OIL Section  --                        |
	|                                                                      |
	|  - 1 Global Task counter                                             |
	|  - 1 Main Task 													   |
	|  - 1 Resource (Main Task protection)                                 |
	 -------------------------------------------------------------------- */
	 
	/* not used...
	COUNTER MTCPIP_STACK_TASK_COUNTER;
	
	TASK MTCPIP_STACK_TASK {
		PRIORITY = 2;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "MTCPIP_STACK_TASK_MUTEX";
	};
	
	ALARM MTCPIP_STACK_TASK_ALARM {
		COUNTER = "MTCPIP_STACK_TASK_COUNTER";
		ACTION = ACTIVATETASK { TASK = "MTCPIP_STACK_TASK"; };
	};
	
	RESOURCE MTCPIP_STACK_TASK_MUTEX { RESOURCEPROPERTY = STANDARD; };
	*/
	
	/* -------------------------------------------------------------------- 
	|                  --  OpenZB OIL Section  --                          |
	|                                                                      |
	|  - 1 Global Task counter                                             |
	|  - 1 PHY Task (read from radio)                                      |
	|  - 7 MAC Tasks (superframe management)                               |
	 -------------------------------------------------------------------- */

	COUNTER UWL_EE_TASK_COUNTER;
	
	TASK UWL_EE_TASK_PHY_READ_DISPATCHER {
		PRIORITY = 30;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_BEACON_MUTEX";
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_DATA_MUTEX";
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_COMMAND_MUTEX";
		RESOURCE = "UWL_EE_RESOURCE_MAC_SEND_MUTEX";
	};

	TASK UWL_EE_TASK_MAC_PROCESS_RX_BEACON {
		PRIORITY = 25;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_BEACON_MUTEX";
	};

	TASK UWL_EE_TASK_MAC_PROCESS_RX_DATA {
		PRIORITY = 20;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_DATA_MUTEX";
	};

	TASK UWL_EE_TASK_MAC_PROCESS_RX_COMMAND {
		PRIORITY = 20;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_RX_COMMAND_MUTEX";
		RESOURCE = "UWL_EE_RESOURCE_MAC_SEND_MUTEX";
	};

	TASK UWL_EE_TASK_MAC_TIMESLOT {
		PRIORITY = 20;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_MUTEX";
		RESOURCE = "UWL_EE_RESOURCE_MAC_GTS_SEND_MUTEX";
		RESOURCE = "periodic_query_list_mutex";
	};
	ALARM UWL_EE_ALARM_MAC_TIMESLOT {
		COUNTER = "UWL_EE_TASK_COUNTER";
		ACTION = ACTIVATETASK {TASK="UWL_EE_TASK_MAC_TIMESLOT";};
	};

	TASK UWL_EE_TASK_MAC_BEFORE_TIMESLOT {
		PRIORITY = 20;
		STACK = SHARED;
		SCHEDULE = FULL;
//-		RESOURCE = "UWL_EE_RESOURCE_MAC_MUTEX";
		RESOURCE = "query_list_mutex";
	};
	ALARM UWL_EE_ALARM_MAC_BEFORE_TIMESLOT {
		COUNTER = "UWL_EE_TASK_COUNTER";
		ACTION = ACTIVATETASK {TASK="UWL_EE_TASK_MAC_BEFORE_TIMESLOT";};
	};

	TASK UWL_EE_TASK_MAC_BACKOFF_PERIOD {
		PRIORITY = 20;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_SEND_MUTEX";
	};
	ALARM UWL_EE_ALARM_MAC_BACKOFF_PERIOD {
		COUNTER = "UWL_EE_TASK_COUNTER";
		ACTION = ACTIVATETASK {TASK="UWL_EE_TASK_MAC_BACKOFF_PERIOD";};
	};

	TASK UWL_EE_TASK_MAC_GTS_SEND {
		PRIORITY = 15;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = "UWL_EE_RESOURCE_MAC_GTS_SEND_MUTEX";
	};
	ALARM UWL_EE_ALARM_MAC_GTS_SEND {
		COUNTER = "UWL_EE_TASK_COUNTER";
		ACTION = ACTIVATETASK {TASK="UWL_EE_TASK_MAC_GTS_SEND";};
	};

	
	/* ****************************************************************** */
	/*                    Resources Declaration                           */
	/* ****************************************************************** */
	RESOURCE UWL_EE_RESOURCE_MAC_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};
	RESOURCE UWL_EE_RESOURCE_MAC_GTS_SEND_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};
	RESOURCE UWL_EE_RESOURCE_MAC_RX_BEACON_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};
	RESOURCE UWL_EE_RESOURCE_MAC_RX_DATA_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};
	RESOURCE UWL_EE_RESOURCE_MAC_RX_COMMAND_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};
	RESOURCE UWL_EE_RESOURCE_MAC_SEND_MUTEX { 
		RESOURCEPROPERTY = STANDARD; 
	};

};

